#@ load("@ytt:data", "data")

#@ def pipeline_image():
#@   return data.values.docker_registry + "/proof-of-sats-plugin-pipeline"
#@ end

#@ def proof_of_sats_plugin_image():
#@   return data.values.docker_registry + "/proof-of-sats-plugin"
#@ end

#@ def task_image_config():
type: registry-image
source:
  username: #@ data.values.docker_registry_user
  password: #@ data.values.docker_registry_password
  repository: #@ pipeline_image()
#@ end

groups:
- name: proof-of-sats-plugin
  jobs:
  - build-edge-image

jobs:
- name: build-edge-image
  serial: true
  plan:
  - in_parallel:
    - { get: repo, trigger: true }
    - { get: pipeline-tasks }
  - task: prepare-docker-build
    config:
      platform: linux
      image_resource: #@ task_image_config()
      inputs:
      - name: pipeline-tasks
      - name: repo
      outputs:
      - name: repo
      run:
        path: pipeline-tasks/ci/tasks/prepare-docker-build.sh
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: repo
      outputs:
      - name: image
      params:
        CONTEXT: repo
        DOCKERFILE: "repo/Dockerfile"
      run:
        path: build
  - put: edge-image
    params:
      image: image/image.tar

resources:
- name: repo
  type: git
  source:
    ignore_paths: ["ci/*[^md]"]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key


- name: edge-image
  type: registry-image
  source:
    tag: edge
    username: #@ data.values.docker_registry_user
    password: #@ data.values.docker_registry_password
    repository: #@ proof_of_sats_plugin_image()


- name: pipeline-tasks
  type: git
  source:
    paths: [ci/tasks/*, Makefile]
    uri: #@ data.values.git_uri
    branch: #@ data.values.git_branch
    private_key: #@ data.values.github_private_key
